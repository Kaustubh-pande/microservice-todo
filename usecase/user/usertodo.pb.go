// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usertodo.proto

package usecase

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Getrequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Getrequest) Reset()         { *m = Getrequest{} }
func (m *Getrequest) String() string { return proto.CompactTextString(m) }
func (*Getrequest) ProtoMessage()    {}
func (*Getrequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{0}
}

func (m *Getrequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Getrequest.Unmarshal(m, b)
}
func (m *Getrequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Getrequest.Marshal(b, m, deterministic)
}
func (m *Getrequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Getrequest.Merge(m, src)
}
func (m *Getrequest) XXX_Size() int {
	return xxx_messageInfo_Getrequest.Size(m)
}
func (m *Getrequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Getrequest.DiscardUnknown(m)
}

var xxx_messageInfo_Getrequest proto.InternalMessageInfo

func (m *Getrequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type User struct {
	// option (gorm.opts).ormable = true;
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Token                string   `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type Response struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token                *Token   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Response) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token                *Token   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{4}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Todo                 *Todo    `protobuf:"bytes,2,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{5}
}

func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (m *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(m, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetUserResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type GetAllResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Token                *Token   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllResponse) Reset()         { *m = GetAllResponse{} }
func (m *GetAllResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllResponse) ProtoMessage()    {}
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{6}
}

func (m *GetAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllResponse.Unmarshal(m, b)
}
func (m *GetAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllResponse.Marshal(b, m, deterministic)
}
func (m *GetAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllResponse.Merge(m, src)
}
func (m *GetAllResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllResponse.Size(m)
}
func (m *GetAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllResponse proto.InternalMessageInfo

func (m *GetAllResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *GetAllResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type DeleteResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{7}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeleteResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	Error                []*Error `protobuf:"bytes,3,rep,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{8}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Token) GetError() []*Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{9}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Todo struct {
	// option (gorm.opts).ormable = true;
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Task                 string   `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	CreatedAt            string   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Uid                  int32    `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{10}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Todo) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *Todo) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Todo) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Todo) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type DeleteTodoResponse struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTodoResponse) Reset()         { *m = DeleteTodoResponse{} }
func (m *DeleteTodoResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTodoResponse) ProtoMessage()    {}
func (*DeleteTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{11}
}

func (m *DeleteTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTodoResponse.Unmarshal(m, b)
}
func (m *DeleteTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTodoResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTodoResponse.Merge(m, src)
}
func (m *DeleteTodoResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTodoResponse.Size(m)
}
func (m *DeleteTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTodoResponse proto.InternalMessageInfo

func (m *DeleteTodoResponse) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

type TodoResponse struct {
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoResponse) Reset()         { *m = TodoResponse{} }
func (m *TodoResponse) String() string { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()    {}
func (*TodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{12}
}

func (m *TodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoResponse.Unmarshal(m, b)
}
func (m *TodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoResponse.Marshal(b, m, deterministic)
}
func (m *TodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoResponse.Merge(m, src)
}
func (m *TodoResponse) XXX_Size() int {
	return xxx_messageInfo_TodoResponse.Size(m)
}
func (m *TodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoResponse proto.InternalMessageInfo

func (m *TodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type GetTodoRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoRequest) Reset()         { *m = GetTodoRequest{} }
func (m *GetTodoRequest) String() string { return proto.CompactTextString(m) }
func (*GetTodoRequest) ProtoMessage()    {}
func (*GetTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{13}
}

func (m *GetTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoRequest.Unmarshal(m, b)
}
func (m *GetTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoRequest.Marshal(b, m, deterministic)
}
func (m *GetTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoRequest.Merge(m, src)
}
func (m *GetTodoRequest) XXX_Size() int {
	return xxx_messageInfo_GetTodoRequest.Size(m)
}
func (m *GetTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoRequest proto.InternalMessageInfo

func (m *GetTodoRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetTodoResponse struct {
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoResponse) Reset()         { *m = GetTodoResponse{} }
func (m *GetTodoResponse) String() string { return proto.CompactTextString(m) }
func (*GetTodoResponse) ProtoMessage()    {}
func (*GetTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{14}
}

func (m *GetTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoResponse.Unmarshal(m, b)
}
func (m *GetTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoResponse.Marshal(b, m, deterministic)
}
func (m *GetTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoResponse.Merge(m, src)
}
func (m *GetTodoResponse) XXX_Size() int {
	return xxx_messageInfo_GetTodoResponse.Size(m)
}
func (m *GetTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoResponse proto.InternalMessageInfo

func (m *GetTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type GetAllTodoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTodoRequest) Reset()         { *m = GetAllTodoRequest{} }
func (m *GetAllTodoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTodoRequest) ProtoMessage()    {}
func (*GetAllTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{15}
}

func (m *GetAllTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTodoRequest.Unmarshal(m, b)
}
func (m *GetAllTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTodoRequest.Marshal(b, m, deterministic)
}
func (m *GetAllTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTodoRequest.Merge(m, src)
}
func (m *GetAllTodoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllTodoRequest.Size(m)
}
func (m *GetAllTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTodoRequest proto.InternalMessageInfo

type GetAllTodoResponse struct {
	Todos                []*Todo  `protobuf:"bytes,1,rep,name=todos,proto3" json:"todos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTodoResponse) Reset()         { *m = GetAllTodoResponse{} }
func (m *GetAllTodoResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTodoResponse) ProtoMessage()    {}
func (*GetAllTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_712b78c204e23b29, []int{16}
}

func (m *GetAllTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTodoResponse.Unmarshal(m, b)
}
func (m *GetAllTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTodoResponse.Marshal(b, m, deterministic)
}
func (m *GetAllTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTodoResponse.Merge(m, src)
}
func (m *GetAllTodoResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTodoResponse.Size(m)
}
func (m *GetAllTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTodoResponse proto.InternalMessageInfo

func (m *GetAllTodoResponse) GetTodos() []*Todo {
	if m != nil {
		return m.Todos
	}
	return nil
}

func init() {
	proto.RegisterType((*Getrequest)(nil), "usecase.Getrequest")
	proto.RegisterType((*Request)(nil), "usecase.Request")
	proto.RegisterType((*User)(nil), "usecase.User")
	proto.RegisterType((*Response)(nil), "usecase.Response")
	proto.RegisterType((*GetResponse)(nil), "usecase.GetResponse")
	proto.RegisterType((*GetUserResponse)(nil), "usecase.GetUserResponse")
	proto.RegisterType((*GetAllResponse)(nil), "usecase.GetAllResponse")
	proto.RegisterType((*DeleteResponse)(nil), "usecase.DeleteResponse")
	proto.RegisterType((*Token)(nil), "usecase.Token")
	proto.RegisterType((*Error)(nil), "usecase.Error")
	proto.RegisterType((*Todo)(nil), "usecase.Todo")
	proto.RegisterType((*DeleteTodoResponse)(nil), "usecase.DeleteTodoResponse")
	proto.RegisterType((*TodoResponse)(nil), "usecase.TodoResponse")
	proto.RegisterType((*GetTodoRequest)(nil), "usecase.GetTodoRequest")
	proto.RegisterType((*GetTodoResponse)(nil), "usecase.GetTodoResponse")
	proto.RegisterType((*GetAllTodoRequest)(nil), "usecase.GetAllTodoRequest")
	proto.RegisterType((*GetAllTodoResponse)(nil), "usecase.GetAllTodoResponse")
}

func init() { proto.RegisterFile("usertodo.proto", fileDescriptor_712b78c204e23b29) }

var fileDescriptor_712b78c204e23b29 = []byte{
	// 694 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0x8e, 0x63, 0x3b, 0x87, 0x49, 0x9b, 0xbf, 0xdd, 0xf6, 0x17, 0x56, 0x0a, 0x52, 0xba, 0x20,
	0xd1, 0x0b, 0x14, 0xd1, 0x50, 0x10, 0x5c, 0x80, 0x14, 0x0e, 0x0a, 0xbd, 0xe0, 0xc6, 0xa5, 0x45,
	0x88, 0x0b, 0x64, 0xec, 0x11, 0x58, 0x4d, 0xe2, 0xe0, 0x5d, 0x17, 0x89, 0xb7, 0xe0, 0x4d, 0x78,
	0x01, 0xde, 0x0d, 0xed, 0xac, 0xed, 0x6c, 0x9c, 0x54, 0x4a, 0x25, 0xee, 0x3c, 0x87, 0x6f, 0x76,
	0x66, 0xbe, 0x6f, 0x12, 0xe8, 0x66, 0x02, 0x53, 0x99, 0x44, 0xc9, 0x60, 0x9e, 0x26, 0x32, 0x61,
	0xcd, 0x4c, 0x60, 0x18, 0x08, 0xe4, 0xb7, 0x01, 0xc6, 0x28, 0x53, 0xfc, 0x9e, 0xa1, 0x90, 0xac,
	0x0b, 0xf5, 0xd3, 0xc8, 0xb3, 0xfa, 0xd6, 0x91, 0xeb, 0xd7, 0x4f, 0x23, 0xde, 0x86, 0xa6, 0xaf,
	0x43, 0xfc, 0x97, 0x05, 0xce, 0xb9, 0xc0, 0x54, 0xe5, 0xc4, 0x65, 0x4e, 0x1c, 0x31, 0x06, 0xce,
	0x2c, 0x98, 0xa2, 0x57, 0xef, 0x5b, 0x47, 0x6d, 0x9f, 0xbe, 0xd9, 0x3e, 0xb8, 0x38, 0x0d, 0xe2,
	0x89, 0x67, 0x93, 0x53, 0x1b, 0xac, 0x07, 0xad, 0x79, 0x20, 0xc4, 0x8f, 0x24, 0x8d, 0x3c, 0x87,
	0x02, 0xa5, 0xad, 0x10, 0x32, 0xb9, 0xc4, 0x99, 0xe7, 0x6a, 0x04, 0x19, 0xec, 0x0e, 0x40, 0x98,
	0x62, 0x20, 0x31, 0xfa, 0x1c, 0x48, 0xaf, 0x41, 0xa1, 0x76, 0xee, 0x19, 0x49, 0x7e, 0x06, 0x2d,
	0x1f, 0xc5, 0x3c, 0x99, 0x09, 0x64, 0x87, 0xe0, 0xa8, 0x19, 0xa9, 0xb1, 0xce, 0x70, 0x7b, 0x90,
	0x0f, 0x38, 0x50, 0x3d, 0xfb, 0x14, 0x62, 0xf7, 0x8a, 0x37, 0xea, 0x94, 0xd3, 0x2d, 0x73, 0xde,
	0x2b, 0x6f, 0xfe, 0x26, 0xbf, 0x80, 0xce, 0x18, 0xe5, 0xbf, 0xaf, 0xfb, 0x01, 0xfe, 0x1b, 0xa3,
	0x24, 0xd8, 0x0d, 0x6a, 0x1f, 0x82, 0xa3, 0x68, 0xcb, 0x4b, 0x6f, 0x1b, 0xa5, 0xa3, 0xc4, 0xa7,
	0x10, 0xff, 0x04, 0xdd, 0x31, 0xca, 0xd1, 0x64, 0x52, 0xd6, 0xbd, 0x0b, 0xae, 0x02, 0x0b, 0xcf,
	0xea, 0xdb, 0xab, 0x85, 0x75, 0x6c, 0xc3, 0xae, 0xdf, 0x41, 0xf7, 0x35, 0x4e, 0x50, 0x62, 0x59,
	0xdc, 0x83, 0xa6, 0xc8, 0xc2, 0x10, 0x85, 0xa0, 0xbe, 0x5b, 0x7e, 0x61, 0x96, 0xe3, 0xd4, 0xaf,
	0x1d, 0x87, 0x7f, 0x04, 0x97, 0xca, 0x2f, 0xf8, 0xb6, 0x4c, 0xbe, 0xf7, 0xc1, 0xbd, 0x0a, 0x26,
	0x71, 0x44, 0x25, 0x5a, 0xbe, 0x36, 0x54, 0xa7, 0x98, 0xa6, 0x49, 0xea, 0xd9, 0x34, 0xce, 0xa2,
	0xd3, 0x37, 0xca, 0xeb, 0xeb, 0x20, 0x7f, 0x0e, 0x2e, 0xd9, 0x4a, 0x90, 0x61, 0x12, 0x61, 0x2e,
	0x51, 0xfa, 0x66, 0x7d, 0xe8, 0x44, 0x28, 0xc2, 0x34, 0x9e, 0xcb, 0x38, 0x99, 0xe5, 0x5a, 0x35,
	0x5d, 0xfc, 0x27, 0x38, 0x6a, 0xa7, 0xeb, 0xe4, 0x2d, 0x03, 0x71, 0x59, 0xc8, 0x5b, 0x7d, 0x57,
	0x64, 0x69, 0x57, 0x64, 0xa9, 0xc2, 0xd9, 0x3c, 0x2a, 0xc2, 0x5a, 0xe9, 0xed, 0xdc, 0x33, 0x92,
	0x6c, 0x07, 0xec, 0x2c, 0x8e, 0x48, 0xe8, 0xae, 0xaf, 0x3e, 0xf9, 0x00, 0x98, 0x5e, 0x32, 0xb1,
	0x6a, 0x2c, 0x7a, 0x8a, 0x42, 0x04, 0x5f, 0xb1, 0x58, 0x74, 0x6e, 0xf2, 0x63, 0xd8, 0x5a, 0xca,
	0x2c, 0x44, 0x62, 0x5d, 0x2f, 0x92, 0x3e, 0x89, 0x44, 0xa3, 0xd6, 0xdf, 0xfa, 0x09, 0xe9, 0xf3,
	0xa6, 0x75, 0xf7, 0x60, 0x57, 0x8b, 0xcf, 0x28, 0xcd, 0x9f, 0x01, 0x33, 0x9d, 0x0b, 0x55, 0x2a,
	0xc8, 0xaa, 0x2a, 0x29, 0x4b, 0xc7, 0x86, 0xbf, 0x6d, 0xe8, 0x28, 0xbd, 0x9c, 0x61, 0x7a, 0x15,
	0x87, 0xc8, 0x1e, 0x40, 0xe3, 0x15, 0x2d, 0x96, 0x2d, 0xeb, 0xa9, 0xb7, 0x5b, 0x9a, 0xc5, 0x03,
	0xbc, 0xc6, 0x86, 0x60, 0x8f, 0x51, 0xb2, 0xbd, 0x32, 0xb6, 0xf8, 0x6d, 0xeb, 0xed, 0x9b, 0x4e,
	0x03, 0xf3, 0x12, 0xb6, 0xf2, 0xbb, 0x54, 0x7d, 0x88, 0xf5, 0xe0, 0x03, 0xd3, 0x59, 0x19, 0x8c,
	0xd7, 0xd8, 0x63, 0x68, 0x68, 0x3f, 0xdb, 0x31, 0xda, 0xd2, 0xd0, 0x5b, 0x15, 0xa8, 0x01, 0x7b,
	0x08, 0x70, 0x4e, 0xb2, 0xa0, 0x53, 0xdf, 0x64, 0xc0, 0x27, 0x00, 0x5a, 0x29, 0xeb, 0x10, 0x8b,
	0x97, 0x96, 0x4f, 0x96, 0xd7, 0xd8, 0x7d, 0x70, 0x46, 0x99, 0xfc, 0x56, 0x45, 0x54, 0x8e, 0x9e,
	0xd7, 0xd8, 0x31, 0x6c, 0x5f, 0xa8, 0xa3, 0x0b, 0x94, 0x18, 0xd5, 0x49, 0x56, 0x52, 0x56, 0x21,
	0xc3, 0x3f, 0x75, 0xe8, 0xa8, 0x7d, 0x14, 0x94, 0x9d, 0x00, 0x28, 0x73, 0x85, 0x36, 0xe5, 0xec,
	0xfd, 0xbf, 0xcc, 0xfa, 0xa2, 0xc3, 0x17, 0xd0, 0xcc, 0xe5, 0xc7, 0x96, 0x36, 0x66, 0xe8, 0xaa,
	0xe7, 0xad, 0x06, 0x4a, 0xfc, 0x5b, 0xfa, 0xd9, 0xce, 0xa9, 0x11, 0xac, 0xb7, 0x96, 0xb0, 0x8d,
	0xc8, 0x3c, 0x29, 0x58, 0xa1, 0x66, 0x36, 0xed, 0xff, 0x69, 0xc1, 0xcc, 0x3a, 0xd4, 0x41, 0x85,
	0x19, 0x13, 0xfb, 0xa5, 0x41, 0x7f, 0xc9, 0x8f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x58, 0x2b,
	0xc9, 0x9b, 0xa4, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	Get(ctx context.Context, in *Getrequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetUserTodos(ctx context.Context, in *Getrequest, opts ...grpc.CallOption) (*GetAllTodoResponse, error)
	GetAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetAllResponse, error)
	Updateuser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	Deleteuser(ctx context.Context, in *User, opts ...grpc.CallOption) (*DeleteResponse, error)
	Auth(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error)
	ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Token, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/usecase.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *Getrequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/usecase.UserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserTodos(ctx context.Context, in *Getrequest, opts ...grpc.CallOption) (*GetAllTodoResponse, error) {
	out := new(GetAllTodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.UserService/GetUserTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/usecase.UserService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Updateuser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/usecase.UserService/Updateuser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Deleteuser(ctx context.Context, in *User, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/usecase.UserService/Deleteuser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Auth(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/usecase.UserService/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/usecase.UserService/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Create(context.Context, *User) (*Response, error)
	Get(context.Context, *Getrequest) (*GetResponse, error)
	GetUserTodos(context.Context, *Getrequest) (*GetAllTodoResponse, error)
	GetAll(context.Context, *Request) (*GetAllResponse, error)
	Updateuser(context.Context, *User) (*Response, error)
	Deleteuser(context.Context, *User) (*DeleteResponse, error)
	Auth(context.Context, *User) (*Token, error)
	ValidateToken(context.Context, *Token) (*Token, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Getrequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Get(ctx, req.(*Getrequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Getrequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/GetUserTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserTodos(ctx, req.(*Getrequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetAll(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Updateuser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Updateuser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/Updateuser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Updateuser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Deleteuser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Deleteuser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/Deleteuser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Deleteuser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Auth(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.UserService/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ValidateToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usecase.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserService_Get_Handler,
		},
		{
			MethodName: "GetUserTodos",
			Handler:    _UserService_GetUserTodos_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _UserService_GetAll_Handler,
		},
		{
			MethodName: "Updateuser",
			Handler:    _UserService_Updateuser_Handler,
		},
		{
			MethodName: "Deleteuser",
			Handler:    _UserService_Deleteuser_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _UserService_Auth_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _UserService_ValidateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usertodo.proto",
}

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	TodoCreate(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodoResponse, error)
	GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error)
	GetAllTodos(ctx context.Context, in *GetAllTodoRequest, opts ...grpc.CallOption) (*GetAllTodoResponse, error)
	UpdateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodoResponse, error)
	DeleteTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*DeleteTodoResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) TodoCreate(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.TodoService/TodoCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error) {
	out := new(GetTodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.TodoService/GetTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetAllTodos(ctx context.Context, in *GetAllTodoRequest, opts ...grpc.CallOption) (*GetAllTodoResponse, error) {
	out := new(GetAllTodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.TodoService/GetAllTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.TodoService/UpdateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*DeleteTodoResponse, error) {
	out := new(DeleteTodoResponse)
	err := c.cc.Invoke(ctx, "/usecase.TodoService/DeleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	TodoCreate(context.Context, *Todo) (*TodoResponse, error)
	GetTodo(context.Context, *GetTodoRequest) (*GetTodoResponse, error)
	GetAllTodos(context.Context, *GetAllTodoRequest) (*GetAllTodoResponse, error)
	UpdateTodo(context.Context, *Todo) (*TodoResponse, error)
	DeleteTodo(context.Context, *Todo) (*DeleteTodoResponse, error)
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_TodoCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).TodoCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.TodoService/TodoCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).TodoCreate(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.TodoService/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetTodo(ctx, req.(*GetTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetAllTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetAllTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.TodoService/GetAllTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetAllTodos(ctx, req.(*GetAllTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.TodoService/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usecase.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usecase.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TodoCreate",
			Handler:    _TodoService_TodoCreate_Handler,
		},
		{
			MethodName: "GetTodo",
			Handler:    _TodoService_GetTodo_Handler,
		},
		{
			MethodName: "GetAllTodos",
			Handler:    _TodoService_GetAllTodos_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _TodoService_UpdateTodo_Handler,
		},
		{
			MethodName: "DeleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usertodo.proto",
}
